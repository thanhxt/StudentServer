@startuml StudentGetController

skinparam classAttributeIconSize 0

package org.springframework {
    package web.bind.annotation {
        interface "@RestController" as RestController
        interface "@RequestMapping" as RequestMapping
        interface "@PathVariable" as PathVariable
        interface "@RequestParam" as RequestParam
        interface "@ExceptionHandler" as ExceptionHandler
        interface "@ResponseStatus" as ResponseStatus
    }

    package http {
        class ResponseEntity<T>
    }
    package hateoas {
        class CollectionModel<E>
    }
    package util {
        class MultiValueMap<K,V>
    }
}

package jakarta.servlet.http {
    interface HttpServletRequest
}

package java.util {
    class UUID
    UUID .up[hidden].> HttpServletRequest
}

package com.acme.ttx {
    package service {
        class StudentReadService << control >> << @Service >>
        class NotFoundException
    }

    package rest #DDDDDD {
        class StudentModel <<entity>>

        class StudentGetController << boundary >> << @RestController >> << @RequestMapping >> {
            + @GetMapping getById(@PathVariable id: UUID, request: HttpServletRequest): StudentModel
            + @GetMapping get(@RequestParam queryParams: MultiValueMap<String, String>, request: HttpServletRequest): CollectionModel<StudentModel>
        }

        class CommonExceptionHandler << @ControllerAdvice >> {
            + @ExceptionHandler @ResponseStatus onNotFound(ex: NotFoundException)
        }

        StudentGetController o--> "1" StudentReadService : service
        StudentGetController ..> StudentModel

        StudentGetController .up.> RestController
        StudentGetController .up.> RequestMapping
        StudentGetController .up.> PathVariable
        StudentGetController .up.> RequestParam
        StudentGetController .up.> ResponseEntity
        StudentGetController .up.> MultiValueMap
        StudentGetController .up.> CollectionModel
        StudentGetController .right.> HttpServletRequest

        CommonExceptionHandler .up.> ExceptionHandler
        CommonExceptionHandler .up.> ResponseStatus
        CommonExceptionHandler ..> NotFoundException
        CommonExceptionHandler .up[hidden].> StudentModel

        StudentGetController .right.> UUID

        StudentModel ..> StudentReadService
    }
}

hide empty members
@enduml
